---
"$schema": https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: MLscript
patterns:
- include: "#variables"
- include: "#keywords"
- include: "#strings"
- include: "#numbers"
- include: "#diffTestComments"
- include: "#comments"
- include: "#diffTestFlags"
foldingStartMarker: "^//│ ╔══\\[(?=ERROR|WARNING)\\].*$"
foldingStopMarker: "^//│ ╙──.*$"
repository:
  variables:
    patterns:
    - name: meta.function.declaration.mlscript
      patterns:
      - match: "\\b(fun)\\s+([_a-zA-Z][_a-zA-Z0-9]*)\\b"
        captures:
          '1':
            name: storage.type.function.mlscript
          '2':
            name: entity.name.function.mlscript
    - name: meta.class.declaration.mlscript
      patterns:
      - match: "\\b(class)\\s+([_A-Z][_a-zA-Z0-9]*)\\b"
        captures:
          '1':
            name: storage.type.class.mlscript
          '2':
            name: entity.name.class.mlscript
    - name: meta.variable.mlscript
      patterns:
      - match: "\\b[A-Z][a-zA-Z0-9]*\\b"
        name: entity.name.type.mlscript
      - match: "\\banything|nothing|string|int|number|bool\\b"
        name: entity.name.type.mlscript
      - match: "\\b'[a-zA-Z_][a-zA-Z0-9_]*\\b"
        name: entity.name.type.mlscript
  keywords:
    patterns:
    - name: keyword.structure.mlscript
      match: "\\b(class|module|type|mixin)\\b"
    - name: keyword.control.mlscript
      match: "\\b(let|of|is|extends|this)\\b"
    - name: keyword.control.conditional.mlscript
      match: "\\b(if|and|then|else)\\b"
    - name: keyword.constant.bool.mlscript
      match: "\\b(true|false)\\b"
  strings:
    name: string.quoted.double.mlscript
    begin: "\""
    end: "\""
    patterns:
    - name: constant.character.escape.mlscript
      match: "\\\\."
  numbers:
    patterns:
    - name: constant.numeric.decimal.mlscript
      match: "\\b[0-9][0-9_]*\\b"
  comments:
    patterns:
    - name: comment.line.DiffTests.flag.mlscript
      match: "^:(\\w+)$"
      captures:
        "1":
          name: markup.italic
    - name: comment.line.double-slash.DiffTests.message.opening.mlscript
      begin: "^//│ ╔══(\\[(?:PARSE )?ERROR\\])?(\\[WARNING\\])? (.+)"
      end: "$"
      beginCaptures:
        "1":
          name: message.error
        "2":
          name: message.error # oops, no "message.warning"
        "3":
          name: markup.underline
    - name: comment.line.double-slash.DiffTests.message.support.mlscript
      begin: "^//│ ╟── (.+)"
      end: "$"
      beginCaptures:
        "1":
          name: markup.underline
    - name: comment.line.double-slash.DiffTests.message.quote.mlscript
      begin: "^//│ ║  l.(\\d+):"
      end: "$"
      beginCaptures:
        "1":
          name: markup.bold
    - name: comment.line.double-slash.DiffTests.message.circumflex.mlscript
      begin: "^//│ (?:╙──|╟──|║  )\\s*(\\^+)"
      end: "$"
      beginCaptures:
        "1":
          name: markup.bold
    - name: comment.line.double-slash.DiffTests.message.body.mlscript
      begin: "^//│"
      end: "$"
    - name: comment.line.double-slash.DiffTests.message.closing.mlscript
      begin: "^//│ ╙──"
      end: "$"
    - name: comment.line.double-slash.mlscript
      begin: "//"
      end: "$"
      patterns:
      - include: "#commentContents"
  commentContents:
    patterns:
    - match: "\\b(TODO|FIXME|XXX|NOTE)\\b:?"
      name: keyword.todo.mlscript
scopeName: source.mlscript
